{"ast":null,"code":"var _jsxFileName = \"/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/NavigateToFirstBranch.tsx\",\n  _s = $RefreshSig$();\n// src/components/NavigateToFirstBranch.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getBranches } from \"../services/branchService\";\nimport { CircularProgress, Alert, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigateToFirstBranch = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFirstBranch = async () => {\n      try {\n        const branches = await getBranches();\n        if (branches.length > 0) {\n          navigate(`/branch/${branches[0]._id}/items`, {\n            replace: true\n          });\n        } else {\n          // If no branches exist, navigate to create branch page\n          navigate(`/branch/create-branch`, {\n            replace: true\n          });\n        }\n      } catch (err) {\n        console.error(\"Error fetching branches:\", err);\n        setError(\"Failed to load branches.\");\n        setLoading(false);\n      }\n    };\n    fetchFirstBranch();\n  }, [navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s(NavigateToFirstBranch, \"1DLIFwXOKAPzCbp/u+eP10csBNQ=\", false, function () {\n  return [useNavigate];\n});\n_c = NavigateToFirstBranch;\nexport default NavigateToFirstBranch;\nvar _c;\n$RefreshReg$(_c, \"NavigateToFirstBranch\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getBranches","CircularProgress","Alert","Container","jsxDEV","_jsxDEV","NavigateToFirstBranch","_s","navigate","loading","setLoading","error","setError","fetchFirstBranch","branches","length","_id","replace","err","console","sx","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","_c","$RefreshReg$"],"sources":["/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/NavigateToFirstBranch.tsx"],"sourcesContent":["// src/components/NavigateToFirstBranch.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getBranches } from \"../services/branchService\";\nimport { IBranch } from \"../types\";\nimport { CircularProgress, Alert, Container } from \"@mui/material\";\n\nconst NavigateToFirstBranch: React.FC = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchFirstBranch = async () => {\n      try {\n        const branches: IBranch[] = await getBranches();\n        if (branches.length > 0) {\n          navigate(`/branch/${branches[0]._id}/items`, { replace: true });\n        } else {\n          // If no branches exist, navigate to create branch page\n          navigate(`/branch/create-branch`, { replace: true });\n        }\n      } catch (err) {\n        console.error(\"Error fetching branches:\", err);\n        setError(\"Failed to load branches.\");\n        setLoading(false);\n      }\n    };\n\n    fetchFirstBranch();\n  }, [navigate]);\n\n  if (loading) {\n    return (\n      <Container sx={{ textAlign: \"center\", marginTop: \"50px\" }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container sx={{ textAlign: \"center\", marginTop: \"50px\" }}>\n        <Alert severity=\"error\">{error}</Alert>\n      </Container>\n    );\n  }\n\n  return null;\n};\n\nexport default NavigateToFirstBranch;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,2BAA2B;AAEvD,SAASC,gBAAgB,EAAEC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,qBAA+B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAmB,GAAG,MAAMd,WAAW,CAAC,CAAC;QAC/C,IAAIc,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvBP,QAAQ,CAAC,WAAWM,QAAQ,CAAC,CAAC,CAAC,CAACE,GAAG,QAAQ,EAAE;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACjE,CAAC,MAAM;UACL;UACAT,QAAQ,CAAC,uBAAuB,EAAE;YAAES,OAAO,EAAE;UAAK,CAAC,CAAC;QACtD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACR,KAAK,CAAC,0BAA0B,EAAEO,GAAG,CAAC;QAC9CN,QAAQ,CAAC,0BAA0B,CAAC;QACpCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIC,OAAO,EAAE;IACX,oBACEJ,OAAA,CAACF,SAAS;MAACiB,EAAE,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,eACxDlB,OAAA,CAACJ,gBAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEhB;EAEA,IAAIhB,KAAK,EAAE;IACT,oBACEN,OAAA,CAACF,SAAS;MAACiB,EAAE,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,eACxDlB,OAAA,CAACH,KAAK;QAAC0B,QAAQ,EAAC,OAAO;QAAAL,QAAA,EAAEZ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAEhB;EAEA,OAAO,IAAI;AACb,CAAC;AAACpB,EAAA,CA1CID,qBAA+B;EAAA,QAClBP,WAAW;AAAA;AAAA8B,EAAA,GADxBvB,qBAA+B;AA4CrC,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}