{"ast":null,"code":"var _jsxFileName = \"/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Login.tsx\n\nimport React, { useState, useContext } from 'react';\nimport axios from '../utils/axiosInstance';\nimport { Container, TextField, Button, Typography, Box, Alert, CircularProgress, Card, Avatar } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport NavigateToFirstBranch from '../components/NavigateToFirstBranch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    remember: false\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked,\n      type\n    } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username: credentials.username,\n        password: credentials.password\n      });\n      const {\n        token,\n        role\n      } = response.data;\n      login(token, role);\n      /*#__PURE__*/_jsxDEV(NavigateToFirstBranch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid username or password.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: \"100vh\",\n      backgroundColor: '#fafafa',\n      // Light gray background color\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          padding: 4,\n          boxShadow: 6,\n          borderRadius: 2,\n          backgroundColor: \"#ffffff\" // White background for the card\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              backgroundColor: '#333333',\n              // Dark background color\n              color: '#ffffff',\n              // White text color\n              '&:hover': {\n                backgroundColor: '#555555' // Slightly lighter dark on hover\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              width: '100%',\n              mt: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\",\n              autoComplete: \"username\",\n              autoFocus: true,\n              value: credentials.username,\n              onChange: handleChange,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              value: credentials.password,\n              onChange: handleChange,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              disabled: loading,\n              sx: {\n                mt: 3,\n                mb: 2,\n                height: '56px',\n                backgroundColor: '#333333',\n                // Dark background color\n                color: '#ffffff',\n                // White text color\n                '&:hover': {\n                  backgroundColor: '#555555' // Slightly lighter dark on hover\n                }\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 28\n              }, this) : 'Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"2xf+Qc4T8o4WEaonxXczVz4aoXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","axios","Container","TextField","Button","Typography","Box","Alert","CircularProgress","Card","Avatar","LockOutlinedIcon","useNavigate","AuthContext","NavigateToFirstBranch","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","username","password","remember","error","setError","loading","setLoading","login","navigate","handleChange","e","name","value","checked","type","target","prev","handleSubmit","preventDefault","response","post","token","role","data","fileName","_jsxFileName","lineNumber","columnNumber","_error$response","_error$response$data","console","message","sx","minHeight","backgroundColor","display","alignItems","justifyContent","padding","children","component","maxWidth","boxShadow","borderRadius","flexDirection","m","color","variant","severity","width","mt","onSubmit","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","disabled","mb","height","size","_c","$RefreshReg$"],"sources":["/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/pages/Login.tsx"],"sourcesContent":["// src/pages/Login.tsx\n\nimport React, { useState, useContext } from 'react';\nimport axios from '../utils/axiosInstance';\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Alert,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n  Link,\n  Card,\n  CardContent,\n  Avatar,\n  Grid,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport NavigateToFirstBranch from '../components/NavigateToFirstBranch';\n\nconst Login: React.FC = () => {\n  const [credentials, setCredentials] = useState({ username: '', password: '', remember: false });\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { name, value, checked, type } = e.target;\n    setCredentials((prev) => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username: credentials.username,\n        password: credentials.password,\n      });\n      const { token, role } = response.data;\n      login(token, role);\n      <NavigateToFirstBranch/>\n    } catch (error: any) {\n      console.error('Login error:', error);\n      setError(error.response?.data?.message || 'Invalid username or password.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: \"100vh\",\n        backgroundColor: '#fafafa', // Light gray background color\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 2,\n      }}\n    >\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Card\n          sx={{\n            padding: 4,\n            boxShadow: 6,\n            borderRadius: 2,\n            backgroundColor: \"#ffffff\", // White background for the card\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, backgroundColor: '#333333', // Dark background color\n    color: '#ffffff', // White text color\n    '&:hover': {\n      backgroundColor: '#555555', // Slightly lighter dark on hover\n    },}}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Login\n            </Typography>\n            {error && (\n              <Alert severity=\"error\" sx={{ width: '100%', mt: 2 }}>\n                {error}\n              </Alert>\n            )}\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n                value={credentials.username}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={credentials.password}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              \n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                disabled={loading}\n                sx={{ mt: 3, mb: 2, height: '56px',backgroundColor: '#333333', // Dark background color\n                  color: '#ffffff', // White text color\n                  '&:hover': {\n                    backgroundColor: '#555555', // Slightly lighter dark on hover\n                  }, }}\n              >\n                {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Login'}\n              </Button>\n              \n            </Box>\n          </Box>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}