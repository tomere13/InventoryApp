{"ast":null,"code":"var _jsxFileName = \"/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.tsx\n\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    token,\n    role\n  } = useContext(AuthContext);\n  if (!token) {\n    // Not logged in\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && role !== requiredRole) {\n    // Not authorized\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"9cGNH2lI1Tzv5LoFjvN/NryDSYE=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","token","role","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["// src/components/ProtectedRoute.tsx\n\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\ninterface ProtectedRouteProps {\n  children: JSX.Element;\n  requiredRole?: string;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  requiredRole,\n}) => {\n  const { token, role } = useContext(AuthContext);\n\n  if (!token) {\n    // Not logged in\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (requiredRole && role !== requiredRole) {\n    // Not authorized\n    return <Navigate to=\"/\" />;\n  }\n\n\n\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrD,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAE/C,IAAI,CAACO,KAAK,EAAE;IACV;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIR,YAAY,IAAIG,IAAI,KAAKH,YAAY,EAAE;IACzC;IACA,oBAAOH,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAIA,OAAOT,QAAQ;AACjB,CAAC;AAACE,EAAA,CAnBIH,cAA6C;AAAAW,EAAA,GAA7CX,cAA6C;AAqBnD,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}