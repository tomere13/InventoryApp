{"ast":null,"code":"var _jsxFileName = \"/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/BranchSelector.tsx\",\n  _s = $RefreshSig$();\n// src/components/BranchSelector.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Select, MenuItem, FormControl, InputLabel, CircularProgress, Alert } from \"@mui/material\";\nimport { getBranches } from '../services/branchService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BranchSelector = () => {\n  _s();\n  const {\n    branchId\n  } = useParams();\n  const navigate = useNavigate();\n  const [branches, setBranches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const data = await getBranches();\n        setBranches(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching branches:', err);\n        setError('Failed to load branches.');\n        setLoading(false);\n      }\n    };\n    fetchBranches();\n  }, []);\n  const handleChange = event => {\n    const newBranchId = event.target.value;\n    window.location.href = `/branch/${newBranchId}/items`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"outlined\",\n    sx: {\n      minWidth: 200,\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"branch-select-label\",\n      children: \"\\u05D1\\u05D7\\u05E8 \\u05E1\\u05E0\\u05D9\\u05E3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"branch-select-label\",\n      value: branchId || '',\n      onChange: handleChange,\n      label: \"Select Branch\",\n      children: branches.map(branch => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: branch._id,\n        children: branch.name\n      }, branch._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BranchSelector, \"9LzIuRMFgvaE6M5R81deTNimB8s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BranchSelector;\nexport default BranchSelector;\nvar _c;\n$RefreshReg$(_c, \"BranchSelector\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Select","MenuItem","FormControl","InputLabel","CircularProgress","Alert","getBranches","jsxDEV","_jsxDEV","BranchSelector","_s","branchId","navigate","branches","setBranches","loading","setLoading","error","setError","fetchBranches","data","err","console","handleChange","event","newBranchId","target","value","window","location","href","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","variant","sx","minWidth","mb","id","labelId","onChange","label","map","branch","_id","name","_c","$RefreshReg$"],"sources":["/Users/tomer/Documents/Tomer/Personal-Projects/Inventory-Managment-Project/Frontend/src/components/BranchSelector.tsx"],"sourcesContent":["// src/components/BranchSelector.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Select, MenuItem, FormControl, InputLabel, CircularProgress, Alert, SelectChangeEvent } from \"@mui/material\";\nimport { IBranch } from \"../types\";\nimport { getBranches } from '../services/branchService';\n\nconst BranchSelector: React.FC = () => {\n  const { branchId } = useParams<{ branchId: string }>();\n  const navigate = useNavigate();\n  const [branches, setBranches] = useState<IBranch[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const data = await getBranches();\n        setBranches(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching branches:', err);\n        setError('Failed to load branches.');\n        setLoading(false);\n      }\n    };\n\n    fetchBranches();\n  }, []);\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    const newBranchId = event.target.value;\n    window.location.href = `/branch/${newBranchId}/items`;\n  };\n\n  if (loading) return <CircularProgress />;\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\n\n  return (\n    <FormControl variant=\"outlined\" sx={{ minWidth: 200, mb: 2 }}>\n      <InputLabel id=\"branch-select-label\">בחר סניף</InputLabel>\n      <Select\n        labelId=\"branch-select-label\"\n        value={branchId || ''}\n        onChange={handleChange}\n        label=\"Select Branch\"\n      >\n        {branches.map(branch => (\n          <MenuItem key={branch._id} value={branch._id}>\n            {branch.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default BranchSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}